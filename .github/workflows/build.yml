name: Build nnabla-rl
on:
  pull_request:
    branches: [master]
    types: [synchronize, opened, reopened, ready_for_review]

jobs:
  format:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: check python code format with autopep8
        run: |
          autopep8 -r --diff --max-line-length=120 .
  typing:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Typing check with mypy
        run: |
          mypy nnabla_rl
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with pyflakes
        run: |
          flake8 . --max-line-length=120
  isort:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Check import order
        run: |
          isort --check-only .
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    if: github.event.pull_request.draft == false
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Unit test
        run: |
          pytest tests/
